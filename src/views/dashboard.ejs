<!DOCTYPE html>
<html>
<head>
    <title>Dashboard - Senate Voting System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="/css/styles.css" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <div class="base-wrap">
        <%- include('./partials/navbar', { activePage: 'dashboard', user: user }) %>
        <div class="container dashboard-container">
            <% if (user.is_admin) { %>
                <div class="card dashboard-card">
                    <div class="card-header">
                        <h4><i class="bi bi-person-plus-fill"></i> Pending Approvals</h4>
                    </div>
                    <div class="card-body">
                        <div id="pendingUsers">
                            <% if (pendingUsers.length > 0) { %>
                                <div class="table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Name</th>
                                                <th>Username</th>
                                                <th>Role</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% pendingUsers.forEach(function(pendingUser) { %>
                                                <tr id="user-<%= pendingUser.user_id %>">
                                                    <td><%= pendingUser.name %></td>
                                                    <td><%= pendingUser.username %></td>
                                                    <td><%= pendingUser.role_name %></td>
                                                    <td>
                                                        <form action="/users/approve/<%= pendingUser.user_id %>" method="POST" style="display:inline;">
                                                            <button type="submit" class="btn btn-success btn-sm">Approve</button>
                                                        </form>
                                                        <form action="/users/deny/<%= pendingUser.user_id %>" method="POST" style="display:inline;">
                                                            <button type="submit" class="btn btn-danger btn-sm">Deny</button>
                                                        </form>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        </tbody>
                                    </table>
                                </div>
                            <% } else { %>
                                <p class="text-muted text-center">No pending users at the moment.</p>
                            <% } %>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const socket = io();
        const pendingUsersContainer = document.getElementById('pendingUsers');
        const pendingUsersTable = pendingUsersContainer.querySelector('table tbody');

        function updatePendingUsersView() {
            // If no more pending users, show "No pending users" message
            if (!pendingUsersTable || pendingUsersTable.children.length === 0) {
                pendingUsersContainer.innerHTML = '<p>No pending users at the moment.</p>';
            }
        }

        // Listen for new pending users
        socket.on('newPendingUser', (user) => {
            console.log('New pending user:', user);

            // Create table if it doesn't exist
            if (!pendingUsersTable) {
                pendingUsersContainer.innerHTML = `
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Username</th>
                                <th>Role</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                `;
            }

            const row = document.createElement('tr');
            row.id = `user-${user.user_id}`;
            row.innerHTML = `
                <td>${user.name}</td>
                <td>${user.username}</td>
                <td>${user.role_name}</td>
                <td>
                    <form action="/users/approve/${user.user_id}" method="POST" style="display:inline;">
                        <button type="submit" class="btn btn-success btn-sm">Approve</button>
                    </form>
                    <form action="/users/deny/${user.user_id}" method="POST" style="display:inline;">
                        <button type="submit" class="btn btn-danger btn-sm">Deny</button>
                    </form>
                </td>
            `;
            pendingUsersContainer.querySelector('tbody').appendChild(row);
        });

        // Listen for user approvals
        socket.on('userApproved', (data) => {
            console.log('User approved:', data);
            const userRow = document.getElementById(`user-${data.userId}`);
            if (userRow) {
                userRow.remove();
                updatePendingUsersView();
            }
        });

        // Listen for user denials
        socket.on('userDenied', (data) => {
            console.log('User denied:', data);
            const userRow = document.getElementById(`user-${data.userId}`);
            if (userRow) {
                userRow.remove();
                updatePendingUsersView();
            }
        });

        // Forms submission handling
        pendingUsersContainer.addEventListener('submit', async (e) => {
            if (e.target.matches('form')) {
                e.preventDefault();
                const form = e.target;
                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        credentials: 'same-origin'
                    });
                    if (!response.ok) throw new Error('Network response was not ok');
                } catch (error) {
                    console.error('Error submitting form:', error);
                    alert('Error processing request');
                }
            }
        });
    </script>
</body>
</html>
